// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pubsub.proto

package libp2p_pubsub

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgType int32

const (
	MsgType_Raw     MsgType = 0
	MsgType_Ack     MsgType = 1
	MsgType_Wit     MsgType = 2
	MsgType_Catchup MsgType = 3
)

var MsgType_name = map[int32]string{
	0: "Raw",
	1: "Ack",
	2: "Wit",
	3: "Catchup",
}

var MsgType_value = map[string]int32{
	"Raw":     0,
	"Ack":     1,
	"Wit":     2,
	"Catchup": 3,
}

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}

func (x *MsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MsgType_value, data, "MsgType")
	if err != nil {
		return err
	}
	*x = MsgType(value)
	return nil
}

func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{0}
}

type PbMessage struct {
	MsgType              *MsgType     `protobuf:"varint,1,req,name=Msg_type,json=MsgType,enum=libp2p_pubsub.MsgType" json:"Msg_type,omitempty"`
	Source               *int64       `protobuf:"varint,2,req,name=source" json:"source,omitempty"`
	Step                 *int64       `protobuf:"varint,3,req,name=step" json:"step,omitempty"`
	History              []*PbMessage `protobuf:"bytes,4,rep,name=history" json:"history,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PbMessage) Reset()         { *m = PbMessage{} }
func (m *PbMessage) String() string { return proto.CompactTextString(m) }
func (*PbMessage) ProtoMessage()    {}
func (*PbMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{0}
}

func (m *PbMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PbMessage.Unmarshal(m, b)
}
func (m *PbMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PbMessage.Marshal(b, m, deterministic)
}
func (m *PbMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PbMessage.Merge(m, src)
}
func (m *PbMessage) XXX_Size() int {
	return xxx_messageInfo_PbMessage.Size(m)
}
func (m *PbMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PbMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PbMessage proto.InternalMessageInfo

func (m *PbMessage) GetMsgType() MsgType {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return MsgType_Raw
}

func (m *PbMessage) GetSource() int64 {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return 0
}

func (m *PbMessage) GetStep() int64 {
	if m != nil && m.Step != nil {
		return *m.Step
	}
	return 0
}

func (m *PbMessage) GetHistory() []*PbMessage {
	if m != nil {
		return m.History
	}
	return nil
}

func init() {
	proto.RegisterEnum("libp2p_pubsub.MsgType", MsgType_name, MsgType_value)
	proto.RegisterType((*PbMessage)(nil), "libp2p_pubsub.PbMessage")
}

func init() { proto.RegisterFile("pubsub.proto", fileDescriptor_91df006b05e20cf7) }

var fileDescriptor_91df006b05e20cf7 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x28, 0x4d, 0x2a,
	0x2e, 0x4d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcd, 0xc9, 0x4c, 0x2a, 0x30, 0x2a,
	0x88, 0x87, 0x08, 0x2a, 0xcd, 0x67, 0xe4, 0xe2, 0x0c, 0x48, 0xf2, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c,
	0x4f, 0x15, 0x32, 0xe2, 0xe2, 0xf0, 0x2d, 0x4e, 0x8f, 0x2f, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x54,
	0x60, 0xd2, 0xe0, 0x33, 0x12, 0xd7, 0x43, 0x51, 0xaf, 0x07, 0x93, 0x0e, 0x62, 0xf7, 0x2d, 0x4e,
	0x0f, 0xa9, 0x2c, 0x48, 0x15, 0x12, 0xe3, 0x62, 0x2b, 0xce, 0x2f, 0x2d, 0x4a, 0x4e, 0x95, 0x60,
	0x52, 0x60, 0xd2, 0x60, 0x0e, 0x82, 0xf2, 0x84, 0x84, 0xb8, 0x58, 0x8a, 0x4b, 0x52, 0x0b, 0x24,
	0x98, 0xc1, 0xa2, 0x60, 0xb6, 0x90, 0x11, 0x17, 0x7b, 0x46, 0x66, 0x71, 0x49, 0x7e, 0x51, 0xa5,
	0x04, 0x8b, 0x02, 0xb3, 0x06, 0xb7, 0x91, 0x04, 0x9a, 0xf1, 0x70, 0xa7, 0x04, 0xc1, 0x14, 0x6a,
	0x21, 0xb9, 0x49, 0x88, 0x9d, 0x8b, 0x39, 0x28, 0xb1, 0x5c, 0x80, 0x01, 0xc4, 0x70, 0x4c, 0xce,
	0x16, 0x60, 0x04, 0x31, 0xc2, 0x33, 0x4b, 0x04, 0x98, 0x84, 0xb8, 0xb9, 0xd8, 0x9d, 0x13, 0x4b,
	0x92, 0x33, 0x4a, 0x0b, 0x04, 0x98, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x21, 0x76, 0xd2, 0x43,
	0xf3, 0x00, 0x00, 0x00,
}
